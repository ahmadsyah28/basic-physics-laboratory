{{-- resources/views/facilities.blade.php --}}
@extends('layouts.app')

@section('title', 'Fasilitas Laboratorium - Laboratorium Fisika Dasar')

@section('content')
<!-- Hero Section -->
<section class="relative min-h-[70vh] flex items-center justify-center overflow-hidden">
    <!-- Background Image with Blue Overlay -->
    <div class="absolute inset-0 z-0">
        <img src="{{ asset('images/hero.jpg') }}"
             alt="Fasilitas Laboratorium"
             class="w-full h-full object-cover">
        <div class="absolute inset-0 bg-gradient-to-br from-blue-700/90 via-blue-800/80 to-blue-900/70"></div>
    </div>

    <!-- Animated Particles - Molecular Animation -->
    <div class="absolute inset-0 z-10">
        <div class="molecules-container" id="molecules-container">
            {{-- Molecules will be generated by JavaScript --}}
        </div>
    </div>

    <!-- Content -->
    <div class="relative z-20 mx-6 px-4 sm:px-6 lg:px-8 text-center max-w-5xl">
        <!-- Breadcrumb -->
        <div class="scroll-animate mb-8 opacity-0" data-animation="fade-down">
            <nav class="flex justify-center" aria-label="Breadcrumb">
                <ol class="inline-flex items-center space-x-1 md:space-x-3 bg-white/10 backdrop-blur-sm rounded-full px-6 py-3">
                    <li class="inline-flex items-center">
                        <a href="{{ route('home') }}" class="text-blue-200 hover:text-white transition-colors duration-200 flex items-center">
                            <i class="fas fa-home mr-2"></i>Beranda
                        </a>
                    </li>
                    <li>
                        <div class="flex items-center">
                            <i class="fas fa-chevron-right text-blue-300 mx-3"></i>
                            <span class="text-white font-medium">Fasilitas Laboratorium</span>
                        </div>
                    </li>
                </ol>
            </nav>
        </div>

        <!-- Main Title -->
        <div class="scroll-animate mb-8 opacity-0" data-animation="fade-up" data-delay="200">
            <h1 class="font-poppins text-5xl md:text-7xl font-bold leading-tight mb-6">
                <span class="text-white">{{ $facility->title ?? 'Fasilitas' }}</span>
                <span class="bg-gradient-to-r from-yellow-400 to-orange-400 bg-clip-text text-transparent drop-shadow-lg"> Laboratorium</span>
            </h1>
        </div>
    </div>
</section>

<!-- Main Content Section -->
<section class="py-24 bg-gradient-to-b from-gray-50 to-white">
    <div class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
        <!-- Description Section -->
        <div class="text-center mb-16 scroll-animate" data-animation="fade-down">
            <div class="inline-flex items-center px-6 py-3 bg-blue-50 border border-blue-200 rounded-full text-blue-700 text-sm font-semibold mb-6 shadow-sm">
                <i class="fas fa-building mr-2"></i>
                Fasilitas Unggulan
            </div>
            <h2 class="font-poppins text-4xl md:text-5xl font-bold text-gray-900 mb-8">
                Laboratorium <span class="bg-gradient-to-r from-blue-600 to-blue-800 bg-clip-text text-transparent">Modern</span>
            </h2>
            <div class="max-w-4xl mx-auto">
                <p class="text-gray-600 text-lg md:text-xl leading-relaxed">
                    {{ $facility->description ?? 'Laboratorium Fisika Dasar dilengkapi dengan berbagai fasilitas modern untuk mendukung kegiatan praktikum dan pembelajaran mahasiswa.' }}
                </p>
            </div>
        </div>

        <!-- Facilities Points Section -->
        @if($facility && count($facility->facility_points) > 0)
        <div class="mb-20 scroll-animate" data-animation="fade-up" data-delay="200">
            <h3 class="text-2xl md:text-3xl font-bold text-gray-900 text-center mb-12">
                Fasilitas yang Tersedia
            </h3>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 max-w-5xl mx-auto">
                @foreach($facility->facility_points as $index => $point)
                <div class="flex items-start space-x-4 p-6 bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-100 hover:border-blue-200 group">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                            <i class="fas fa-check text-white text-sm"></i>
                        </div>
                    </div>
                    <div class="flex-1">
                        <p class="text-gray-700 group-hover:text-gray-900 transition-colors duration-300">{{ $point }}</p>
                    </div>
                </div>
                @endforeach
            </div>
        </div>
        @endif

        <!-- Images Gallery Section -->
        @if($facility && count($facility->images) > 0)
        <div class="scroll-animate" data-animation="fade-up" data-delay="400">
            <h3 class="text-2xl md:text-3xl font-bold text-gray-900 text-center mb-12">
                Galeri Laboratorium
            </h3>

            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                @foreach($facility->images as $index => $image)
                <div class="relative overflow-hidden rounded-xl shadow-lg group cursor-pointer" onclick="openImageModal('{{ Storage::url($image) }}', 'Laboratorium Fisika Dasar {{ $index + 1 }}')">
                    <img src="{{ Storage::url($image) }}"
                         alt="Fasilitas Laboratorium {{ $index + 1 }}"
                         class="w-full h-64 object-cover transform group-hover:scale-110 transition-transform duration-500">

                    <!-- Overlay -->
                    <div class="absolute inset-0 bg-gradient-to-t from-black/50 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>

                    <!-- Zoom Icon -->
                    <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                        <div class="w-12 h-12 bg-white/90 backdrop-blur-sm rounded-full flex items-center justify-center">
                            <i class="fas fa-search-plus text-gray-700"></i>
                        </div>
                    </div>
                </div>
                @endforeach
            </div>
        </div>
        @endif

        <!-- Call to Action -->
        <div class="text-center mt-20 scroll-animate" data-animation="fade-up" data-delay="600">
            <div class="bg-gradient-to-r from-blue-600 to-blue-800 rounded-2xl p-8 text-white">
                <h3 class="text-2xl font-bold mb-4">Tertarik Menggunakan Fasilitas Kami?</h3>
                <p class="text-blue-100 mb-6 text-lg">Hubungi kami untuk informasi lebih lanjut tentang penggunaan laboratorium</p>
                <div class="flex flex-col sm:flex-row gap-4 justify-center">
                    <a href="{{ route('visit.index') }}"
                       class="bg-blue-500 text-white px-8 py-3 rounded-lg font-semibold hover:bg-blue-400 transition-colors duration-200 border-2 border-white/20">
                        <i class="fas fa-calendar-plus mr-2"></i>Jadwalkan Kunjungan
                    </a>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Image Modal -->
<div id="imageModal" class="fixed inset-0 bg-black/90 backdrop-blur-sm z-50 hidden items-center justify-center p-4">
    <div class="relative max-w-5xl max-h-[90vh] mx-auto">
        <button onclick="closeImageModal()"
                class="absolute -top-12 right-0 bg-white/20 hover:bg-white/30 text-white border border-white/30 w-10 h-10 rounded-full flex items-center justify-center transition-colors duration-200 z-10">
            <i class="fas fa-times"></i>
        </button>
        <img id="modalImage" src="" alt="" class="w-full h-auto rounded-lg shadow-2xl">
        <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent text-white p-6 rounded-b-lg">
            <h3 id="modalTitle" class="text-xl font-semibold"></h3>
        </div>
    </div>
</div>

<style>
/* Enhanced Gradient Text */
.bg-clip-text {
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
}

/* ===== MOLECULAR ANIMATION CSS ===== */
.molecules-container {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.molecule {
    position: absolute;
    width: 60px;
    height: 60px;
    opacity: 0.8;
    pointer-events: none;
}

.atom {
    position: absolute;
    border-radius: 50%;
    background: radial-gradient(circle, rgba(255,255,255,0.9), rgba(100,200,255,0.4));
    box-shadow: 0 0 20px rgba(255,255,255,0.6);
}

.atom.core {
    width: 12px;
    height: 12px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: radial-gradient(circle, #ffd700, #ff6b35);
    box-shadow: 0 0 25px rgba(255, 215, 0, 0.8);
    animation: pulse 2s infinite ease-in-out;
}

.atom.electron {
    width: 6px;
    height: 6px;
    background: radial-gradient(circle, #00d4ff, #0066cc);
    box-shadow: 0 0 15px rgba(0, 212, 255, 0.7);
}

.orbit {
    position: absolute;
    border: 1px solid rgba(255,255,255,0.3);
    border-radius: 50%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.orbit-1 {
    width: 40px;
    height: 40px;
    animation: rotate 4s linear infinite;
}

.orbit-2 {
    width: 55px;
    height: 55px;
    animation: rotate 6s linear infinite reverse;
}

.orbit-1 .electron {
    top: -3px;
    left: 50%;
    transform: translateX(-50%);
}

.orbit-2 .electron {
    top: -3px;
    left: 50%;
    transform: translateX(-50%);
}

@keyframes rotate {
    from { transform: translate(-50%, -50%) rotate(0deg); }
    to { transform: translate(-50%, -50%) rotate(360deg); }
}

@keyframes pulse {
    0%, 100% {
        transform: translate(-50%, -50%) scale(1);
        box-shadow: 0 0 25px rgba(255, 215, 0, 0.8);
    }
    50% {
        transform: translate(-50%, -50%) scale(1.3);
        box-shadow: 0 0 35px rgba(255, 215, 0, 1);
    }
}

.molecule.float {
    animation: moleculeFloat 18s infinite linear;
}

@keyframes moleculeFloat {
    0% {
        transform: translateY(100vh) translateX(-50px) rotate(0deg) scale(0.5);
        opacity: 0;
    }
    5% {
        opacity: 0.8;
        transform: translateY(95vh) translateX(-40px) rotate(18deg) scale(0.7);
    }
    25% {
        transform: translateY(75vh) translateX(-10px) rotate(90deg) scale(1);
    }
    50% {
        transform: translateY(50vh) translateX(20px) rotate(180deg) scale(1.1);
    }
    75% {
        transform: translateY(25vh) translateX(40px) rotate(270deg) scale(1);
    }
    95% {
        opacity: 0.8;
        transform: translateY(5vh) translateX(60px) rotate(342deg) scale(0.7);
    }
    100% {
        transform: translateY(-10vh) translateX(80px) rotate(360deg) scale(0.5);
        opacity: 0;
    }
}

/* Enhanced molecular variants */
.molecule.large {
    transform: scale(1.3);
}

.molecule.small {
    transform: scale(0.7);
}

.molecule.gold .atom.core {
    background: radial-gradient(circle, #ffd700, #ffb347);
    box-shadow: 0 0 25px rgba(255, 215, 0, 0.9);
}

.molecule.blue .atom.core {
    background: radial-gradient(circle, #00d4ff, #0088cc);
    box-shadow: 0 0 25px rgba(0, 212, 255, 0.8);
}

.molecule.green .atom.core {
    background: radial-gradient(circle, #26de81, #20bf6b);
    box-shadow: 0 0 25px rgba(38, 222, 129, 0.8);
}

/* Scroll Animations */
.scroll-animate {
    opacity: 0;
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.scroll-animate[data-animation="fade-down"] {
    transform: translateY(-60px);
}

.scroll-animate[data-animation="fade-up"] {
    transform: translateY(60px);
}

.scroll-animate.animate {
    opacity: 1;
    transform: translateY(0);
}

/* Modal */
.modal.active {
    display: flex !important;
}

/* Responsive Adjustments */
@media (max-width: 768px) {
    .scroll-animate[data-animation="fade-down"],
    .scroll-animate[data-animation="fade-up"] {
        transform: translateY(40px);
    }

    .molecule {
        width: 40px;
        height: 40px;
    }

    .orbit-1 {
        width: 30px;
        height: 30px;
    }

    .orbit-2 {
        width: 40px;
        height: 40px;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // ===== MOLECULAR ANIMATION JAVASCRIPT =====
    function createMolecularAnimation() {
        const container = document.getElementById('molecules-container');
        if (!container) return;

        const moleculeTypes = ['gold', 'blue', 'green'];
        const moleculeSizes = ['small', 'normal', 'large'];

        function createMolecule() {
            const molecule = document.createElement('div');
            const type = moleculeTypes[Math.floor(Math.random() * moleculeTypes.length)];
            const size = moleculeSizes[Math.floor(Math.random() * moleculeSizes.length)];

            molecule.className = `molecule float ${type} ${size}`;
            molecule.style.left = Math.random() * 100 + '%';
            molecule.style.animationDelay = Math.random() * 5 + 's';
            molecule.style.animationDuration = (15 + Math.random() * 10) + 's';

            // Core atom (nucleus)
            const core = document.createElement('div');
            core.className = 'atom core';
            molecule.appendChild(core);

            // Create orbits and electrons
            const numOrbits = Math.random() > 0.5 ? 2 : 1;
            for (let i = 1; i <= numOrbits; i++) {
                const orbit = document.createElement('div');
                orbit.className = `orbit orbit-${i}`;

                // Add electron to orbit
                const electron = document.createElement('div');
                electron.className = 'atom electron';
                orbit.appendChild(electron);

                molecule.appendChild(orbit);
            }

            container.appendChild(molecule);

            // Remove molecule after animation completes
            setTimeout(() => {
                if (container.contains(molecule)) {
                    container.removeChild(molecule);
                }
            }, 20000);
        }

        // Create initial molecules
        for (let i = 0; i < 3; i++) {
            setTimeout(() => createMolecule(), i * 2000);
        }

        // Continue creating molecules
        const moleculeInterval = setInterval(createMolecule, 3000);

        // Cleanup function for when page is unloaded
        window.addEventListener('beforeunload', () => {
            clearInterval(moleculeInterval);
        });
    }

    // Initialize molecular animation
    createMolecularAnimation();

    // ===== IMAGE MODAL FUNCTIONALITY =====
    window.openImageModal = function(imageSrc, title) {
        const modal = document.getElementById('imageModal');
        const modalImage = document.getElementById('modalImage');
        const modalTitle = document.getElementById('modalTitle');

        modalImage.src = imageSrc;
        modalTitle.textContent = title;
        modal.classList.remove('hidden');
        modal.classList.add('flex');

        // Prevent body scrolling
        document.body.style.overflow = 'hidden';
    };

    window.closeImageModal = function() {
        const modal = document.getElementById('imageModal');
        modal.classList.add('hidden');
        modal.classList.remove('flex');
        document.body.style.overflow = 'auto';
    };

    // Close modal on outside click
    document.getElementById('imageModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeImageModal();
        }
    });

    // Close modal on Escape key
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeImageModal();
        }
    });

    // Intersection Observer for scroll animations
    const animatedElements = document.querySelectorAll('.scroll-animate');

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const delay = entry.target.dataset.delay || 0;
                setTimeout(() => {
                    entry.target.classList.add('animate');
                }, delay);
            }
        });
    }, {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    });

    animatedElements.forEach(element => {
        observer.observe(element);
    });

    // Parallax effect for hero section
    window.addEventListener('scroll', () => {
        const scrolled = window.pageYOffset;
        const parallax = document.querySelector('.molecules-container');
        if (parallax) {
            const speed = scrolled * 0.3;
            parallax.style.transform = `translateY(${speed}px)`;
        }
    });
});
</script>
@endsection
